<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Inventory;
use App\Onhand;
use App\Subinventories;
use App\MaterialTransaction;
use App\MaterialTxns;
use Gate;
use DB;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class MissTransactionController extends Controller
{
    //
    public function index()
    {
        abort_if(Gate::denies('inventory_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');
        $type= DB::table('bm_mtl_material_trn_types')
                ->whereIn('trx_code',[31,32])
                ->get();

        return view('admin.missTransaction.index', compact('type'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create( Request $request)
    {
        $type= DB::table('bm_mtl_material_trn_types')
                ->where('trx_code',$request->trx_code)
                ->get();
        $reference=$request->reference;
        return view('admin.missTransaction.create',compact('request','type','reference'));
    }

    public function store(Request $request)
    {
        foreach ($request->inventory_item_id as $key => $value)
		{
       try {
        \DB::beginTransaction();

            /* Onhand Transaction From subinventory */

            $onhandfrom=Onhand::where([['inventory_item_id',$request->inventory_item_id[$key]],['subinventory_code',$request->subinvfrom[$key]],['primary_transaction_quantity','>=',$request->quantity[$key]]])->first();
            $issues = $request->transaction_code;
            if($onhandfrom && $request->quantity[$key] >0){
                if($issues == 31){
                    $update_stock=	$onhandfrom->primary_transaction_quantity-$request->quantity[$key];
                }else{
                    $update_stock=	$onhandfrom->primary_transaction_quantity+$request->quantity[$key];
                }
                $onhand=Onhand::where(['inventory_item_id'=>$request->inventory_item_id[$key],'subinventory_code'=>$request->subinvfrom[$key]])->update(["primary_transaction_quantity"=>$update_stock]);
            }else {
                if($issues != 31){
                    $stock = array(
                                'inventory_item_id'=>$request->inventory_item_id[$key],
                                'subinventory_code'=>$request->subinvfrom[$key],
                                'primary_transaction_quantity'=>$request->quantity[$key],
                                'transaction_uom_code'=>$request->uom[$key],
                                'created_by'=>auth()->user()->id,
                                'created_at'=> date('Y-m-d H:i:s'),
                                'updated_at'=> date('Y-m-d H:i:s'),
                    );
                    Onhand::create($stock);
                }else{
                    return back()->with('error', 'Stock Zero Or Stock Not Enough');
                }
            }
            /* End Of Onhand Transaction From subinventory */

            $trx = array(
                            'transaction_id'=>MaterialTxns::all()->count()+1,
                            'last_updated_by'=>auth()->user()->id,
                            'created_by'=>auth()->user()->id,
                            'inventory_item_id'=>$request->inventory_item_id[$key],
                            'organization_id'=>'222',
                            'subinventory_code'=>$request->subinvfrom[$key],
                            'transaction_type_id'=>$request->transaction_code,
                            'transaction_action_id'=>$request->transaction_code,
                            'transaction_source_type_id'=>$request->transaction_code,
                            'transaction_source_name'=>$request->transaction_type,
                            'transaction_quantity'=>$request->quantity[$key],
                            'transaction_uom'=>$request->uom[$key],
                            'primary_quantity'=>$request->quantity[$key],
                            'product_category'=>$request->sub_category[$key],
                            'transaction_date'=>date('d-M-Y H:i:s',strtotime($request->transaction_date)),
                            'transaction_reference'=>$request->reference[$key],
                            'receiving_document'=>$request->reference[$key],
                            'source_line_id'=>$request->source_line_id,
                            'attribute_category'=>$request->reference[$key],
                            );
                MaterialTxns::	create($trx);
        \DB::commit();
        }catch (Throwable $e){
            \DB::rollback();
        }
        }
        return redirect()->route('admin.missTransaction.index');
    }
}
